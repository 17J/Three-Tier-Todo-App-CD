---
# Deployment for Java Backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1 # For production, increase replicas for high availability
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend-container
          image: 17rj/three-tier-todo-backend:latest # Replace with your Java app image. Use specific tags instead of 'latest'.
          ports:
            - containerPort: 8080 # Default Spring Boot port, or your configured port.
          env: #Pass database connection properties
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-service:3306/mydb #replace yourdatabase
            - name: SPRING_DATASOURCE_USERNAME
              value: root #replace
            - name: SPRING_DATASOURCE_PASSWORD
              value: Test@123 #replace
          # Add resource requests/limits for production
          # resources:
          #   requests:
          #     cpu: "200m"
          #     memory: "256Mi"
          #   limits:
          #     cpu: "1000m"
          #     memory: "1Gi"
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health # Spring Boot actuator health endpoint
          #     port: 8080
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health # Spring Boot actuator health endpoint
          #     port: 8080
          #   initialDelaySeconds: 30
          #   periodSeconds: 5
          # startupProbe:
          #   httpGet:
          #     path: /actuator/health # Spring Boot actuator health endpoint
          #     port: 8080
          #   failureThreshold: 30
          #   periodSeconds: 10

---
# Service for Java Backend
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080 # Service port
      targetPort: 8080 # Container port
  type: ClusterIP # Good for internal communication.
